{"version":3,"sources":["Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","email","message","sent","handleName","e","setState","target","value","handleEmail","handleMessage","formSubmit","preventDefault","data","axios","post","then","res","resetForm","catch","console","log","setTimeout","className","onSubmit","this","htmlFor","type","placeholder","onChange","required","id","cols","rows","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAGqBA,E,4MACrBC,MAAM,CACEC,KAAK,GACLC,MAAM,GACNC,QAAQ,GACRC,MAAK,G,EAIbC,WAAW,SAACC,GACJ,EAAKC,SAAS,CAACN,KAAKK,EAAEE,OAAOC,S,EAGrCC,YAAY,SAACJ,GACL,EAAKC,SAAS,CAACL,MAAMI,EAAEE,OAAOC,S,EAGtCE,cAAc,SAACL,GACP,EAAKC,SAAS,CAACJ,QAAQG,EAAEE,OAAOC,S,EAIxCG,WAAW,SAACN,GACJA,EAAEO,iBAEF,IAAIC,EAAO,CACPb,KAAK,EAAKD,MAAMC,KAChBC,MAAM,EAAKF,MAAME,MACjBC,QAAQ,EAAKH,MAAMG,SAI/BY,IAAMC,KAAK,YAAYF,GACtBG,MAAK,SAAAC,GACF,EAAKX,SAAS,CAACH,MAAK,GAAO,EAAKe,gBACjCC,OAAM,WAAKC,QAAQC,IAAI,wB,EAI1BH,UAAU,WACN,EAAKZ,SAAS,CACVN,KAAK,GACLC,MAAM,GACNC,QAAQ,KAEZoB,YAAW,WACP,EAAKhB,SACJ,CAACH,MAAK,MACT,M,4CAIF,WACI,OACI,qBAAKoB,UAAU,YAAf,SACI,uBAAMC,SAAUC,KAAKd,WAArB,UACI,sBAAKY,UAAU,aAAf,UACI,uBAAOG,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OACZ3B,KAAK,OACLuB,UAAU,OACVK,YAAY,eACZpB,MAAOiB,KAAK1B,MAAMC,KAClB6B,SAAUJ,KAAKrB,gBAInB,sBAAKmB,UAAU,aAAf,UACI,uBAAOG,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OACZ3B,KAAK,QACLuB,UAAU,QACVK,YAAY,gBACZpB,MAAOiB,KAAK1B,MAAME,MAClB4B,SAAUJ,KAAKhB,YACfqB,UAAQ,OAMZ,sBAAKP,UAAU,sBAAf,UACI,uBAAOG,QAAQ,UAAf,qBACA,0BAAU1B,KAAK,UACf+B,GAAG,GAAGC,KAAK,KAAKC,KAAK,IACrBL,YAAY,kBACZpB,MAAOiB,KAAK1B,MAAMG,QAClB2B,SAAUJ,KAAKf,mBAInB,qBAAKa,UAAWE,KAAK1B,MAAMI,KAAM,gBAAgB,MAAjD,mCAKA,qBAAKoB,UAAU,MAAf,SACI,wBAAQI,KAAK,SAAb,+B,GAjGUO,a,MCWnBC,MAVf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCKSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ab399879.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class Form extends Component {\r\nstate={\r\n        name:'',\r\n        email:'',\r\n        message:'',\r\n        sent:false\r\n\r\n}\r\n\r\nhandleName=(e)=>{\r\n        this.setState({name:e.target.value})\r\n}\r\n    \r\nhandleEmail=(e)=>{\r\n        this.setState({email:e.target.value})\r\n}\r\n    \r\nhandleMessage=(e)=>{\r\n        this.setState({message:e.target.value})\r\n}\r\n                 \r\n\r\nformSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            name:this.state.name,\r\n            email:this.state.email,\r\n            message:this.state.message\r\n        }\r\n          \r\n\r\naxios.post('/api/form',data)\r\n.then(res=>{\r\n    this.setState({sent:true,},this.resetForm())\r\n}).catch(()=>{console.log('message not sent');})\r\n            \r\n}    \r\n       \r\nresetForm=()=>{\r\n    this.setState({\r\n        name:'',\r\n        email:'',\r\n        message:''\r\n    })\r\n    setTimeout(()=>{\r\n        this.setState\r\n        ({sent:false,})\r\n    },3000)\r\n    \r\n}    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.formSubmit}>\r\n                    <div className=\"singleItem\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" \r\n                        name=\"name\" \r\n                        className=\"name\" \r\n                        placeholder=\"your name...\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleName}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"singleItem\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"text\" \r\n                        name=\"email\" \r\n                        className=\"email\" \r\n                        placeholder=\"your email...\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleEmail}\r\n                        required\r\n                        />\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className=\"textArea singleItem\">\r\n                        <label htmlFor=\"message\">Message</label>\r\n                        <textarea name=\"message\" \r\n                        id=\"\" cols=\"30\" rows=\"5\"\r\n                        placeholder=\"your message...\"\r\n                        value={this.state.message}\r\n                        onChange={this.handleMessage}\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    <div className={this.state.sent ?'msg msgAppear':'msg'}>\r\n                        Message has been sent\r\n                    </div>\r\n\r\n\r\n                    <div className=\"btn\">\r\n                        <button type=\"submit\" >Submit</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Form from './Form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}